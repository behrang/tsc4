{-
  TASK 5 - Fibonacci sequence
  Implement a function that generates the Fibonacci
  sequence from N to N+K terms (0<=N<=370; 0<=N+K<=371; 0<=K<=255).
  The first two terms of the Fibonacci sequence are F_0 = 0 and F_1 = 1,
  and the rest are defined as F_n = F_(n-1) + F_(n-2).
  The resulting Fibonacci sequence should be stored in a tuple.
  For example, a request with N = 1 and K = 3 should return a tuple [1, 1, 2],
  and a request with N = 201 and K = 4 should return a tuple
  [453973694165307953197296969697410619233826,
  734544867157818093234908902110449296423351,
  1188518561323126046432205871807859915657177,
  1923063428480944139667114773918309212080528]
-}

() recv_internal() {
}

;; testable
(tuple) fibonacci_sequence (int n, int k) method_id {
    tuple r = empty_tuple();

    if (k == 0) {
        return r;
    }

    if (n == 0) {
        r~tpush(0);
        k -= 1;
        if (k == 0) {
            return r;
        }
    }

    if (n <= 1) {
        r~tpush(1);
        k -= 1;
        if (k == 0) {
            return r;
        }
    }

    int n-2 = 0;
    int n-1 = 1;

    int i = 2;
    while (n > i) {
        i += 1;
        int t = n-2 + n-1;
        n-2 = n-1;
        n-1 = t;
    }

    while (k > 0) {
        k -= 1;
        int t = n-2 + n-1;
        n-2 = n-1;
        n-1 = t;
        r~tpush(t);
    }

    return r;
}
